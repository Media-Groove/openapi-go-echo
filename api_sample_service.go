/*
    * api
    *
* Generated by: OpenAPI Generator (https://openapi-generator.tech)
*/

package main

import (
	"github.com/Media-Groove/openapi-go-echo/openapi"
	"github.com/Media-Groove/openapi-go-echo/sampleapi"
	"net/http"
)

// SampleApiService is a service that implements the logic for the SampleApiServicer
// This service should implement the business logic for every endpoint for the SampleApi API.
// Include any external packages or services that will be required by this service.
type SampleApiService struct {
	data map[int32]sampleapi.Data
}

// NewSampleApiService creates a default api service
// noinspection GoUnusedExportedFunction
func NewSampleApiService() sampleapi.SampleApiServicer {
	return &SampleApiService{
		data: map[int32]sampleapi.Data{},
	}
}

// DeleteTestId - サンプルDELETE
// noinspection GoUnusedParameter
func (s *SampleApiService) DeleteTestId(ec *openapi.EchoContext, id int32) (int, interface{}) {
	if _, ok := s.data[id]; ok {
		delete(s.data, id)
		return http.StatusNoContent, nil
	}
	return http.StatusNotFound, nil
}

// GetTestId - サンプルGET
// noinspection GoUnusedParameter
func (s *SampleApiService) GetTestId(ec *openapi.EchoContext, id int32) (int, interface{}) {
	if data, ok := s.data[id]; ok {
		return http.StatusOK, data
	}
	return http.StatusNotFound, nil
}

// PutTestId - サンプルPUT
// noinspection GoUnusedParameter
func (s *SampleApiService) PutTestId(ec *openapi.EchoContext, id int32, data *sampleapi.Data) (int, interface{}) {
	s.data[id] = *data
	return http.StatusCreated, data
}
